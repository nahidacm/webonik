<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php /* @var $this Mage_Catalog_Block_Product_View_Options_Type_Select */ ?>
<?php 

// start my custom

			$_option = $this->getOption();
			$configValue = $this->getProduct()->getPreconfiguredValues()->getData('options/' . $_option->getId());
			$store = $this->getProduct()->getStore();

			if ($_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_DROP_DOWN
				|| $_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_MULTIPLE) {
				$require = ($_option->getIsRequire()) ? ' required-entry' : '';
				$extraParams = '';
				$select = $this->getLayout()->createBlock('core/html_select')
					->setData(array(
						'id' => 'select_'.$_option->getId(),
						'class' => $require.' product-custom-option'
					));
				if ($_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_DROP_DOWN) {
					$title_options =  ($_option->getIsRequire())?$this->htmlEscape($_option->getTitle())." *":$this->htmlEscape($_option->getTitle()) ;
					
					$select->setName('options['.$_option->getid().']')
						->addOption('', $title_options );
				} else {
					$select->setName('options['.$_option->getid().'][]');
					$select->setClass('multiselect'.$require.' product-custom-option');
				}
				foreach ($_option->getValues() as $_value) {
					if( $_value->getPrice(($_value->getPriceType() == 'percent') )== 0){
						$sign = '+';
						$priceStr = $sign . $this->helper('core')->currencyByStore(0, $store, true, false);
					}
					else{
						$priceStr = $this->_formatPrice(array(
							'is_percent'    => ($_value->getPriceType() == 'percent'),
							'pricing_value' => $_value->getPrice(($_value->getPriceType() == 'percent'))
						), false);
					}
					$select->addOption(
						$_value->getOptionTypeId(),
						$_value->getTitle() . ' ' . $priceStr . '',
						array('price' => $this->helper('core')->currencyByStore($_value->getPrice(true), $store, false))
					);
				}
				if ($_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_MULTIPLE) {
					$extraParams = ' multiple="multiple"';
				}
				if (!$this->getSkipJsReloadPrice()) {
					$extraParams .= ' onchange="opConfig.reloadPrice()"';
				}
				$select->setExtraParams($extraParams);

				if ($configValue) {
					$select->setValue($configValue);
				}

				$selectHtml = $select->getHtml();
			}

// end my custom
?>
<?php /* @var $this Mage_Catalog_Block_Product_View_Options_Type_Select */ ?>
<?php //$_option = $this->getOption(); ?>
<?php /*
<dt><label<?php if ($_option->getIsRequire()) echo ' class="required"' ?>><?php if ($_option->getIsRequire()) echo '<em>*</em>' ?><?php echo  $this->htmlEscape($_option->getTitle()) ?></label></dt>
*/?>
<dd<?php if ($_option->decoratedIsLast){?> class="last"<?php }?>>
    <div class="input-box">
<?php 	if ($_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_DROP_DOWN
				|| $_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_MULTIPLE) { ?>
        <?php echo $selectHtml; ?>
	<?php 
		} else{ 
			echo $this->getValuesHtml(); ?>
	<?php } ?>
        <?php if ($_option->getIsRequire()): ?>
            <?php if ($_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_RADIO || $_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_CHECKBOX): ?>
                <span id="options-<?php echo $_option->getId() ?>-container"></span>
            <?php endif; ?>
        <?php endif;?>
    </div>
</dd>

